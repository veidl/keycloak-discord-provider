name: Build and Release Maven Application

on:
  push:
    branches:
      - master
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Archive JAR
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: keycloak-discord-provider
          path: target/*.jar

  release:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Extract version from pom.xml
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Project version: $VERSION"
          echo "::set-output name=VERSION::$VERSION"

      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: keycloak-discord-provider

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.extract_version.outputs.VERSION }}
          release_name: Release ${{ steps.extract_version.outputs.VERSION }}
          body: "Release version ${{ steps.extract_version.outputs.VERSION }} for the Keycloak Discord Provider"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/*.jar
          asset_name: keycloakd-discord-provider-${{ steps.extract_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive
